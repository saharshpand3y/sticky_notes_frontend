{"ast":null,"code":"var _jsxFileName = \"/home/saharsh/Sticky_Notes_APP/sticky-notes-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getNotes, createNote, deleteNote, updateNote, login, checkLoginStatus // Import the checkLoginStatus function\n} from \"./services/api\";\nimport NoteList from \"./components/NoteList\";\nimport AddNoteForm from \"./components/AddNoteForm\";\nimport \"./styles.css\"; // Import styles\nimport { darken } from \"polished\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null); // Track the selected note for editing\n  const [hoveredSave, setHoveredSave] = useState(false); // Hover state for Save button\n  const [hoveredClose, setHoveredClose] = useState(false); // Hover state for Close button\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Track user authentication\n  const [token, setToken] = useState(\"\"); // Store JWT token\n  const [loginError, setLoginError] = useState(\"\"); // Track login errors\n  const [username, setUsername] = useState(\"\"); // Username input\n  const [password, setPassword] = useState(\"\"); // Password input\n\n  // Check login status when the app loads\n  useEffect(() => {\n    const checkAuth = async () => {\n      const userData = await checkLoginStatus(); // Call the API to check login status\n      if (userData) {\n        setIsAuthenticated(true); // User is logged in\n        setToken(localStorage.getItem(\"token\")); // Retrieve the token from localStorage\n      } else {\n        setIsAuthenticated(false); // User is not logged in\n      }\n    };\n    checkAuth();\n  }, []); // Empty dependency array ensures this runs only on initial load\n\n  // Fetch notes from the backend after login\n  useEffect(() => {\n    if (isAuthenticated) {\n      const fetchNotes = async () => {\n        try {\n          const data = await getNotes(token); // Pass token for authentication\n          setNotes(data);\n        } catch (error) {\n          console.error(\"Failed to fetch notes:\", error);\n        }\n      };\n      fetchNotes();\n    }\n  }, [isAuthenticated, token]);\n\n  // Handle login\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await login(username, password); // Call the login API\n      setToken(response.token); // Save the token\n      setIsAuthenticated(true); // Set authenticated to true\n      setLoginError(\"\"); // Clear any login errors\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      setLoginError(\"Invalid username or password. Please try again.\");\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    setToken(\"\");\n    setNotes([]);\n    localStorage.removeItem(\"token\"); // Remove token from localStorage\n  };\n\n  // Add a new note\n  const handleAddNote = async note => {\n    const newNote = await createNote(note, token); // Pass token for authentication\n    setNotes(prevNotes => [...prevNotes, newNote]);\n  };\n\n  // Delete a note\n  const handleDeleteNote = async id => {\n    await deleteNote(id, token); // Pass token for authentication\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n  };\n\n  // Select a note for editing\n  const handleSelectNote = note => {\n    setSelectedNote(note); // Open the note in edit mode\n  };\n\n  // Close the popup\n  const handleClosePopup = () => {\n    setSelectedNote(null); // Close the popup\n  };\n\n  // Update a note and save changes to the database\n  const handleUpdateNote = async updatedNote => {\n    try {\n      const savedNote = await updateNote(updatedNote, token); // Save to the database\n      setNotes(prevNotes => prevNotes.map(note => note.id === savedNote.id ? savedNote : note));\n      setSelectedNote(null); // Close the popup after saving\n    } catch (error) {\n      console.error(\"Failed to update the note:\", error);\n      alert(\"An error occurred while saving the note. Please try again.\");\n    }\n  };\n\n  // Render the login page if the user is not authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: loginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render the notes app if the user is authenticated\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sticky Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(AddNoteForm, {\n        onAdd: handleAddNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app notes\",\n      children: /*#__PURE__*/_jsxDEV(NoteList, {\n        notes: notes,\n        onDelete: handleDeleteNote,\n        onSelect: handleSelectNote // Pass the select handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), selectedNote && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: selectedNote.title,\n        onChange: e => setSelectedNote({\n          ...selectedNote,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: selectedNote.content,\n        onChange: e => setSelectedNote({\n          ...selectedNote,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: hoveredSave ? darken(0.2, selectedNote.color) : selectedNote.color || \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          margin: \"10px 5px\",\n          cursor: \"pointer\"\n        },\n        onMouseEnter: () => setHoveredSave(true),\n        onMouseLeave: () => setHoveredSave(false),\n        onClick: () => handleUpdateNote(selectedNote),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: hoveredClose ? darken(0.2, selectedNote.color) : selectedNote.color || \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          margin: \"10px 5px\",\n          cursor: \"pointer\"\n        },\n        onMouseEnter: () => setHoveredClose(true),\n        onMouseLeave: () => setHoveredClose(false),\n        onClick: handleClosePopup,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/fSP/e6MownoF6z1Mcjy8wfN8bo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getNotes","createNote","deleteNote","updateNote","login","checkLoginStatus","NoteList","AddNoteForm","darken","jsxDEV","_jsxDEV","App","_s","notes","setNotes","selectedNote","setSelectedNote","hoveredSave","setHoveredSave","hoveredClose","setHoveredClose","isAuthenticated","setIsAuthenticated","token","setToken","loginError","setLoginError","username","setUsername","password","setPassword","checkAuth","userData","localStorage","getItem","fetchNotes","data","error","console","handleLogin","e","preventDefault","response","handleLogout","removeItem","handleAddNote","note","newNote","prevNotes","handleDeleteNote","id","filter","handleSelectNote","handleClosePopup","handleUpdateNote","updatedNote","savedNote","map","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","onAdd","onDelete","onSelect","title","content","style","backgroundColor","color","border","borderRadius","padding","margin","cursor","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["/home/saharsh/Sticky_Notes_APP/sticky-notes-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  getNotes,\n  createNote,\n  deleteNote,\n  updateNote,\n  login,\n  checkLoginStatus, // Import the checkLoginStatus function\n} from \"./services/api\";\nimport NoteList from \"./components/NoteList\";\nimport AddNoteForm from \"./components/AddNoteForm\";\nimport \"./styles.css\"; // Import styles\nimport { darken } from \"polished\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null); // Track the selected note for editing\n  const [hoveredSave, setHoveredSave] = useState(false); // Hover state for Save button\n  const [hoveredClose, setHoveredClose] = useState(false); // Hover state for Close button\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Track user authentication\n  const [token, setToken] = useState(\"\"); // Store JWT token\n  const [loginError, setLoginError] = useState(\"\"); // Track login errors\n  const [username, setUsername] = useState(\"\"); // Username input\n  const [password, setPassword] = useState(\"\"); // Password input\n\n  // Check login status when the app loads\n  useEffect(() => {\n    const checkAuth = async () => {\n      const userData = await checkLoginStatus(); // Call the API to check login status\n      if (userData) {\n        setIsAuthenticated(true); // User is logged in\n        setToken(localStorage.getItem(\"token\")); // Retrieve the token from localStorage\n      } else {\n        setIsAuthenticated(false); // User is not logged in\n      }\n    };\n\n    checkAuth();\n  }, []); // Empty dependency array ensures this runs only on initial load\n\n  // Fetch notes from the backend after login\n  useEffect(() => {\n    if (isAuthenticated) {\n      const fetchNotes = async () => {\n        try {\n          const data = await getNotes(token); // Pass token for authentication\n          setNotes(data);\n        } catch (error) {\n          console.error(\"Failed to fetch notes:\", error);\n        }\n      };\n      fetchNotes();\n    }\n  }, [isAuthenticated, token]);\n\n  // Handle login\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await login(username, password); // Call the login API\n      setToken(response.token); // Save the token\n      setIsAuthenticated(true); // Set authenticated to true\n      setLoginError(\"\"); // Clear any login errors\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      setLoginError(\"Invalid username or password. Please try again.\");\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    setToken(\"\");\n    setNotes([]);\n    localStorage.removeItem(\"token\"); // Remove token from localStorage\n  };\n\n  // Add a new note\n  const handleAddNote = async (note) => {\n    const newNote = await createNote(note, token); // Pass token for authentication\n    setNotes((prevNotes) => [...prevNotes, newNote]);\n  };\n\n  // Delete a note\n  const handleDeleteNote = async (id) => {\n    await deleteNote(id, token); // Pass token for authentication\n    setNotes((prevNotes) => prevNotes.filter((note) => note.id !== id));\n  };\n\n  // Select a note for editing\n  const handleSelectNote = (note) => {\n    setSelectedNote(note); // Open the note in edit mode\n  };\n\n  // Close the popup\n  const handleClosePopup = () => {\n    setSelectedNote(null); // Close the popup\n  };\n\n  // Update a note and save changes to the database\n  const handleUpdateNote = async (updatedNote) => {\n    try {\n      const savedNote = await updateNote(updatedNote, token); // Save to the database\n      setNotes((prevNotes) =>\n        prevNotes.map((note) => (note.id === savedNote.id ? savedNote : note))\n      );\n      setSelectedNote(null); // Close the popup after saving\n    } catch (error) {\n      console.error(\"Failed to update the note:\", error);\n      alert(\"An error occurred while saving the note. Please try again.\");\n    }\n  };\n\n  // Render the login page if the user is not authenticated\n  if (!isAuthenticated) {\n    return (\n      <div className=\"login-container\">\n        <h1>Login</h1>\n        <form onSubmit={handleLogin}>\n          <div>\n            <label>Username:</label>\n            <input\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n            />\n          </div>\n          <div>\n            <label>Password:</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          <button type=\"submit\">Login</button>\n          {loginError && <p className=\"error\">{loginError}</p>}\n        </form>\n      </div>\n    );\n  }\n\n  // Render the notes app if the user is authenticated\n  return (\n    <div>\n      <div className=\"header\">\n        <h1>Sticky Notes</h1>\n        <button onClick={handleLogout} className=\"logout-button\">\n          Logout\n        </button>\n      </div>\n      <div className=\"app\">\n        <AddNoteForm onAdd={handleAddNote} />\n      </div>\n      <div className=\"app notes\">\n        <NoteList\n          notes={notes}\n          onDelete={handleDeleteNote}\n          onSelect={handleSelectNote} // Pass the select handler\n        />\n      </div>\n      {selectedNote && (\n        <div className=\"popup\">\n          <h3>Edit Note</h3>\n          <input\n            type=\"text\"\n            value={selectedNote.title}\n            onChange={(e) =>\n              setSelectedNote({ ...selectedNote, title: e.target.value })\n            }\n          />\n          <textarea\n            value={selectedNote.content}\n            onChange={(e) =>\n              setSelectedNote({ ...selectedNote, content: e.target.value })\n            }\n          />\n          {/* Save Button */}\n          <button\n            style={{\n              backgroundColor: hoveredSave\n                ? darken(0.2, selectedNote.color)\n                : selectedNote.color || \"#007bff\",\n              color: \"#fff\",\n              border: \"none\",\n              borderRadius: \"8px\",\n              padding: \"10px\",\n              margin: \"10px 5px\",\n              cursor: \"pointer\",\n            }}\n            onMouseEnter={() => setHoveredSave(true)}\n            onMouseLeave={() => setHoveredSave(false)}\n            onClick={() => handleUpdateNote(selectedNote)}\n          >\n            Save\n          </button>\n          {/* Close Button */}\n          <button\n            style={{\n              backgroundColor: hoveredClose\n                ? darken(0.2, selectedNote.color)\n                : selectedNote.color || \"#007bff\",\n              color: \"#fff\",\n              border: \"none\",\n              borderRadius: \"8px\",\n              padding: \"10px\",\n              margin: \"10px 5px\",\n              cursor: \"pointer\",\n            }}\n            onMouseEnter={() => setHoveredClose(true)}\n            onMouseLeave={() => setHoveredClose(false)}\n            onClick={handleClosePopup}\n          >\n            Close\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}