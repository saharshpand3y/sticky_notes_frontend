{"ast":null,"code":"var _jsxFileName = \"/home/saharsh/Sticky_Notes_APP/sticky-notes-frontend/src/components/Note.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Note = ({\n  note,\n  onDelete,\n  onUpdate\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false); // Track if the note is in edit mode\n  const [editedTitle, setEditedTitle] = useState(note.title);\n  const [editedContent, setEditedContent] = useState(note.content);\n  const handleSave = () => {\n    onUpdate({\n      ...note,\n      title: editedTitle,\n      content: editedContent\n    }); // Save the updated note\n    setIsEditing(false); // Exit edit mode\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    style: {\n      backgroundColor: note.color || \"#fff\",\n      // Default color if none provided\n      padding: \"15px\",\n      margin: \"10px\",\n      borderRadius: \"8px\",\n      boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.2)\",\n      transition: \"transform 0.2s\",\n      cursor: isEditing ? \"default\" : \"pointer\" // Pointer only when not editing\n    },\n    onClick: () => !isEditing && setIsEditing(true) // Expand note when clicked\n    ,\n    children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedTitle,\n        onChange: e => setEditedTitle(e.target.value),\n        style: {\n          margin: \"10px 0\",\n          padding: \"10px\",\n          borderRadius: \"8px\",\n          width: \"100%\",\n          border: \"1px solid #e0e0e0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedContent,\n        onChange: e => setEditedContent(e.target.value),\n        style: {\n          margin: \"10px 0\",\n          padding: \"10px\",\n          borderRadius: \"8px\",\n          width: \"100%\",\n          border: \"1px solid #e0e0e0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        style: {\n          margin: \"10px 0\",\n          padding: \"10px\",\n          borderRadius: \"8px\",\n          width: \"100%\",\n          backgroundColor: \"#007BFF\",\n          color: \"#fff\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          overflowWrap: \"break-word\",\n          textOverflow: \"ellipsis\",\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\"\n        },\n        children: note.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: e => {\n          e.stopPropagation(); // Prevent triggering the onClick of the parent\n          onDelete(note.id);\n        },\n        style: {\n          marginTop: \"10px\",\n          padding: \"10px\",\n          borderRadius: \"8px\",\n          width: \"100%\",\n          backgroundColor: \"#FF4D4D\",\n          color: \"#fff\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Note, \"yyqDGvhUD0nucy2fsR0xP8Id59g=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Note","note","onDelete","onUpdate","_s","isEditing","setIsEditing","editedTitle","setEditedTitle","title","editedContent","setEditedContent","content","handleSave","className","style","backgroundColor","color","padding","margin","borderRadius","boxShadow","transition","cursor","onClick","children","type","value","onChange","e","target","width","border","fileName","_jsxFileName","lineNumber","columnNumber","overflowWrap","textOverflow","whiteSpace","overflow","stopPropagation","id","marginTop","_c","$RefreshReg$"],"sources":["/home/saharsh/Sticky_Notes_APP/sticky-notes-frontend/src/components/Note.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Note = ({ note, onDelete, onUpdate }) => {\n  const [isEditing, setIsEditing] = useState(false); // Track if the note is in edit mode\n  const [editedTitle, setEditedTitle] = useState(note.title);\n  const [editedContent, setEditedContent] = useState(note.content);\n\n  const handleSave = () => {\n    onUpdate({ ...note, title: editedTitle, content: editedContent }); // Save the updated note\n    setIsEditing(false); // Exit edit mode\n  };\n\n  return (\n    <div\n      className=\"note\"\n      style={{\n        backgroundColor: note.color || \"#fff\", // Default color if none provided\n        padding: \"15px\",\n        margin: \"10px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.2)\",\n        transition: \"transform 0.2s\",\n        cursor: isEditing ? \"default\" : \"pointer\", // Pointer only when not editing\n      }}\n      onClick={() => !isEditing && setIsEditing(true)} // Expand note when clicked\n    >\n      {isEditing ? (\n        <>\n          {/* Editable Title */}\n          <input\n            type=\"text\"\n            value={editedTitle}\n            onChange={(e) => setEditedTitle(e.target.value)}\n            style={{\n              margin: \"10px 0\",\n              padding: \"10px\",\n              borderRadius: \"8px\",\n              width: \"100%\",\n              border: \"1px solid #e0e0e0\",\n            }}\n          />\n          {/* Editable Content */}\n          <textarea\n            value={editedContent}\n            onChange={(e) => setEditedContent(e.target.value)}\n            style={{\n              margin: \"10px 0\",\n              padding: \"10px\",\n              borderRadius: \"8px\",\n              width: \"100%\",\n              border: \"1px solid #e0e0e0\",\n            }}\n          />\n          {/* Save Button */}\n          <button\n            onClick={handleSave}\n            style={{\n              margin: \"10px 0\",\n              padding: \"10px\",\n              borderRadius: \"8px\",\n              width: \"100%\",\n              backgroundColor: \"#007BFF\",\n              color: \"#fff\",\n              border: \"none\",\n              cursor: \"pointer\",\n            }}\n          >\n            Save\n          </button>\n        </>\n      ) : (\n        <>\n          {/* Display Title and Content */}\n          <h3>{note.title}</h3>\n          <p\n            style={{\n              overflowWrap: \"break-word\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\",\n            }}\n          >\n            {note.content}\n          </p>\n          {/* Delete Button */}\n          <button\n            className=\"delete-button\"\n            onClick={(e) => {\n              e.stopPropagation(); // Prevent triggering the onClick of the parent\n              onDelete(note.id);\n            }}\n            style={{\n              marginTop: \"10px\",\n              padding: \"10px\",\n              borderRadius: \"8px\",\n              width: \"100%\",\n              backgroundColor: \"#FF4D4D\",\n              color: \"#fff\",\n              border: \"none\",\n              cursor: \"pointer\",\n            }}\n          >\n            Delete\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Note;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}