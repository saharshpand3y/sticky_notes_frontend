{"ast":null,"code":"var _jsxFileName = \"/home/saharsh/Sticky_Notes_APP/sticky-notes-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getNotes, createNote, deleteNote, updateNote } from \"./services/api\"; // Import updateNote\nimport NoteList from \"./components/NoteList\";\nimport AddNoteForm from \"./components/AddNoteForm\";\nimport \"./styles.css\"; // Import styles\nimport { darken } from \"polished\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null); // Track the selected note for editing\n  const [hoveredSave, setHoveredSave] = useState(false); // Hover state for Save button\n  const [hoveredClose, setHoveredClose] = useState(false); // Hover state for Close button\n\n  // Fetch notes from the backend on component mount\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const data = await getNotes();\n      setNotes(data);\n    };\n    fetchNotes();\n  }, []);\n\n  // Add a new note\n  const handleAddNote = async note => {\n    const newNote = await createNote(note);\n    setNotes(prevNotes => [...prevNotes, newNote]);\n  };\n\n  // Delete a note\n  const handleDeleteNote = async id => {\n    await deleteNote(id);\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n  };\n\n  // Select a note for editing\n  const handleSelectNote = note => {\n    setSelectedNote(note); // Open the note in edit mode\n  };\n\n  // Close the popup\n  const handleClosePopup = () => {\n    setSelectedNote(null); // Close the popup\n  };\n\n  // Update a note and save changes to the database\n  const handleUpdateNote = async updatedNote => {\n    try {\n      const savedNote = await updateNote(updatedNote); // Save to the database\n      setNotes(prevNotes => prevNotes.map(note => note.id === savedNote.id ? savedNote : note));\n      setSelectedNote(null); // Close the popup after saving\n    } catch (error) {\n      console.error(\"Failed to update the note:\", error);\n      alert(\"An error occurred while saving the note. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sticky Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(AddNoteForm, {\n        onAdd: handleAddNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app notes\",\n      children: /*#__PURE__*/_jsxDEV(NoteList, {\n        notes: notes,\n        onDelete: handleDeleteNote,\n        onSelect: handleSelectNote // Pass the select handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), selectedNote && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: selectedNote.title,\n        onChange: e => setSelectedNote({\n          ...selectedNote,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: selectedNote.content,\n        onChange: e => setSelectedNote({\n          ...selectedNote,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: hoveredSave ? darken(0.2, selectedNote.color) : selectedNote.color || \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          margin: \"10px 5px\",\n          cursor: \"pointer\"\n        },\n        onMouseEnter: () => setHoveredSave(true),\n        onMouseLeave: () => setHoveredSave(false),\n        onClick: () => handleUpdateNote(selectedNote),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: hoveredClose ? darken(0.2, selectedNote.color) : selectedNote.color || \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          margin: \"10px 5px\",\n          cursor: \"pointer\"\n        },\n        onMouseEnter: () => setHoveredClose(true),\n        onMouseLeave: () => setHoveredClose(false),\n        onClick: handleClosePopup,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"o4fdC+oy0oxO/0SViP3ITa7Pnp8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getNotes","createNote","deleteNote","updateNote","NoteList","AddNoteForm","darken","jsxDEV","_jsxDEV","App","_s","notes","setNotes","selectedNote","setSelectedNote","hoveredSave","setHoveredSave","hoveredClose","setHoveredClose","fetchNotes","data","handleAddNote","note","newNote","prevNotes","handleDeleteNote","id","filter","handleSelectNote","handleClosePopup","handleUpdateNote","updatedNote","savedNote","map","error","console","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","onDelete","onSelect","type","value","title","onChange","e","target","content","style","backgroundColor","color","border","borderRadius","padding","margin","cursor","onMouseEnter","onMouseLeave","onClick","_c","$RefreshReg$"],"sources":["/home/saharsh/Sticky_Notes_APP/sticky-notes-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getNotes, createNote, deleteNote, updateNote } from \"./services/api\"; // Import updateNote\nimport NoteList from \"./components/NoteList\";\nimport AddNoteForm from \"./components/AddNoteForm\";\nimport \"./styles.css\"; // Import styles\nimport { darken } from \"polished\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null); // Track the selected note for editing\n  const [hoveredSave, setHoveredSave] = useState(false); // Hover state for Save button\n  const [hoveredClose, setHoveredClose] = useState(false); // Hover state for Close button\n\n  // Fetch notes from the backend on component mount\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const data = await getNotes();\n      setNotes(data);\n    };\n    fetchNotes();\n  }, []);\n\n  // Add a new note\n  const handleAddNote = async (note) => {\n    const newNote = await createNote(note);\n    setNotes((prevNotes) => [...prevNotes, newNote]);\n  };\n\n  // Delete a note\n  const handleDeleteNote = async (id) => {\n    await deleteNote(id);\n    setNotes((prevNotes) => prevNotes.filter((note) => note.id !== id));\n  };\n\n  // Select a note for editing\n  const handleSelectNote = (note) => {\n    setSelectedNote(note); // Open the note in edit mode\n  };\n\n  // Close the popup\n  const handleClosePopup = () => {\n    setSelectedNote(null); // Close the popup\n  };\n\n  // Update a note and save changes to the database\n  const handleUpdateNote = async (updatedNote) => {\n    try {\n      const savedNote = await updateNote(updatedNote); // Save to the database\n      setNotes((prevNotes) =>\n        prevNotes.map((note) => (note.id === savedNote.id ? savedNote : note))\n      );\n      setSelectedNote(null); // Close the popup after saving\n    } catch (error) {\n      console.error(\"Failed to update the note:\", error);\n      alert(\"An error occurred while saving the note. Please try again.\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"header\">\n        <h1>Sticky Notes</h1>\n      </div>\n      <div className=\"app\">\n        <AddNoteForm onAdd={handleAddNote} />\n      </div>\n      <div className=\"app notes\">\n        <NoteList\n          notes={notes}\n          onDelete={handleDeleteNote}\n          onSelect={handleSelectNote} // Pass the select handler\n        />\n      </div>\n      {selectedNote && (\n        <div className=\"popup\">\n          <h3>Edit Note</h3>\n          <input\n            type=\"text\"\n            value={selectedNote.title}\n            onChange={(e) =>\n              setSelectedNote({ ...selectedNote, title: e.target.value })\n            }\n          />\n          <textarea\n            value={selectedNote.content}\n            onChange={(e) =>\n              setSelectedNote({ ...selectedNote, content: e.target.value })\n            }\n          />\n          {/* Save Button */}\n          <button\n            style={{\n              backgroundColor: hoveredSave\n                ? darken(0.2, selectedNote.color)\n                : selectedNote.color || \"#007bff\",\n              color: \"#fff\",\n              border: \"none\",\n              borderRadius: \"8px\",\n              padding: \"10px\",\n              margin: \"10px 5px\",\n              cursor: \"pointer\",\n            }}\n            onMouseEnter={() => setHoveredSave(true)}\n            onMouseLeave={() => setHoveredSave(false)}\n            onClick={() => handleUpdateNote(selectedNote)}\n          >\n            Save\n          </button>\n          {/* Close Button */}\n          <button\n            style={{\n              backgroundColor: hoveredClose\n                ? darken(0.2, selectedNote.color)\n                : selectedNote.color || \"#007bff\",\n              color: \"#fff\",\n              border: \"none\",\n              borderRadius: \"8px\",\n              padding: \"10px\",\n              margin: \"10px 5px\",\n              cursor: \"pointer\",\n            }}\n            onMouseEnter={() => setHoveredClose(true)}\n            onMouseLeave={() => setHoveredClose(false)}\n            onClick={handleClosePopup}\n          >\n            Close\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}