{"ast":null,"code":"import axios from\"axios\";const API_URL=\"http://localhost:5000\";// Helper function to get Authorization headers\nconst getAuthHeaders=()=>{const token=localStorage.getItem(\"token\");if(!token){console.error(\"No token found in localStorage\");}return{headers:{Authorization:\"Bearer \".concat(token)}};};// Centralized error handler for API calls\nconst handleApiError=error=>{if(error.response){// Server responded with a status code outside the range of 2xx\nconsole.error(\"API Error:\",error.response.data);throw new Error(error.response.data.message||\"An error occurred\");}else if(error.request){// Request was made but no response received\nconsole.error(\"No response received from server:\",error.request);throw new Error(\"No response received from server\");}else{// Something else caused the error\nconsole.error(\"Error:\",error.message);throw new Error(error.message);}};// Define the login function\nexport const login=async(username,password)=>{try{const response=await axios.post(\"\".concat(API_URL,\"/login\"),{username,password});const{token}=response.data;localStorage.setItem(\"token\",token);// Save token to localStorage\nreturn response.data;}catch(error){handleApiError(error);}};// Fetch all notes\nexport const getNotes=async()=>{try{const response=await axios.get(\"\".concat(API_URL,\"/notes\"),getAuthHeaders());return response.data;}catch(error){handleApiError(error);}};// Create a new note\nexport const createNote=async note=>{try{const response=await axios.post(\"\".concat(API_URL,\"/notes\"),note,getAuthHeaders());return response.data;}catch(error){handleApiError(error);}};// Delete a note by ID\nexport const deleteNote=async id=>{try{await axios.delete(\"\".concat(API_URL,\"/notes/\").concat(id),getAuthHeaders());}catch(error){handleApiError(error);}};// Update an existing note\nexport const updateNote=async note=>{try{const response=await axios.put(\"\".concat(API_URL,\"/notes/\").concat(note.id),note,getAuthHeaders());return response.data;}catch(error){handleApiError(error);}};","map":{"version":3,"names":["axios","API_URL","getAuthHeaders","token","localStorage","getItem","console","error","headers","Authorization","concat","handleApiError","response","data","Error","message","request","login","username","password","post","setItem","getNotes","get","createNote","note","deleteNote","id","delete","updateNote","put"],"sources":["/home/saharsh/Sticky_Notes_APP/sticky-notes-frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:5000\";\n\n// Helper function to get Authorization headers\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    console.error(\"No token found in localStorage\");\n  }\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  };\n};\n\n\n// Centralized error handler for API calls\nconst handleApiError = (error) => {\n  if (error.response) {\n    // Server responded with a status code outside the range of 2xx\n    console.error(\"API Error:\", error.response.data);\n    throw new Error(error.response.data.message || \"An error occurred\");\n  } else if (error.request) {\n    // Request was made but no response received\n    console.error(\"No response received from server:\", error.request);\n    throw new Error(\"No response received from server\");\n  } else {\n    // Something else caused the error\n    console.error(\"Error:\", error.message);\n    throw new Error(error.message);\n  }\n};\n\n// Define the login function\nexport const login = async (username, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      username,\n      password,\n    });\n    const { token } = response.data;\n    localStorage.setItem(\"token\", token); // Save token to localStorage\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n  }\n};\n\n\n// Fetch all notes\nexport const getNotes = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/notes`, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n  }\n};\n\n// Create a new note\nexport const createNote = async (note) => {\n  try {\n    const response = await axios.post(\n      `${API_URL}/notes`,\n      note,\n      getAuthHeaders()\n    );\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n  }\n};\n\n// Delete a note by ID\nexport const deleteNote = async (id) => {\n  try {\n    await axios.delete(`${API_URL}/notes/${id}`, getAuthHeaders());\n  } catch (error) {\n    handleApiError(error);\n  }\n};\n\n// Update an existing note\nexport const updateNote = async (note) => {\n  try {\n    const response = await axios.put(\n      `${API_URL}/notes/${note.id}`,\n      note,\n      getAuthHeaders()\n    );\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}