{"ast":null,"code":"var _jsxFileName = \"/home/saharsh/Sticky_Notes_APP/sticky-notes-frontend/src/components/Note.js\";\nimport React from \"react\";\nimport { darken } from \"polished\";\nimport tinycolor from \"tinycolor2\";\n\n// Function to determine the appropriate background color for the delete button\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst determineColor = color => {\n  const isDark = tinycolor(color).isDark(); // Check if the color is dark\n  if (isDark) {\n    return darken(-0.2, color); // Lighten the color slightly if it's dark\n  } else {\n    return darken(0.2, color); // Darken the color slightly if it's light\n  }\n};\n\n// Commented out for now; can be used later if font color needs to change dynamically\n// const determineFontColor = (color) => {\n//   const isDark = tinycolor(color).isDark();\n//   return isDark ? \"#fff\" : \"#000\"; // White font for dark backgrounds, black for light\n// };\n\nconst Note = ({\n  note,\n  onDelete,\n  onSelect\n}) => {\n  // Check if the note has large content (e.g., more than 200 characters)\n  const isLargeContent = note.content.length > 200;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `note ${isLargeContent ? \"large-content\" : \"\"}` // Add class for large content\n    ,\n    style: {\n      //   color: determineFontColor(note.color), // Uncomment if dynamic font color is needed\n      backgroundColor: note.color || \"#fff\",\n      // Default color if none provided\n      padding: \"15px\",\n      margin: \"10px\",\n      borderRadius: \"8px\",\n      boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.2)\",\n      // Subtle shadow for better appearance\n      transition: \"transform 0.2s\",\n      // Smooth scaling effect on hover\n      cursor: \"pointer\",\n      // Pointer cursor to indicate clickability\n      height: \"auto\",\n      // Allow dynamic height based on content\n      width: \"auto\",\n      // Allow dynamic width based on content\n      overflowWrap: \"break-word\",\n      // Ensure long words break properly\n      wordBreak: \"break-word\",\n      // Additional support for older browsers\n      whiteSpace: \"normal\" // Allow text wrapping\n    },\n    onClick: () => onSelect(note) // Open the note in edit mode when clicked\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: note.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: note.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-button\",\n      style: {\n        backgroundColor: note.color ? determineColor(note.color) : \"#fff\",\n        // Adjust button color based on note color\n        border: \"none\",\n        // Remove default button border\n        padding: \"5px 10px\",\n        // Add padding for better appearance\n        borderRadius: \"4px\",\n        // Rounded corners for the button\n        cursor: \"pointer\" // Pointer cursor for better UX\n      },\n      onClick: e => {\n        e.stopPropagation(); // Prevent triggering the onClick of the parent div\n        onDelete(note.id); // Delete the note\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","darken","tinycolor","jsxDEV","_jsxDEV","determineColor","color","isDark","Note","note","onDelete","onSelect","isLargeContent","content","length","className","style","backgroundColor","padding","margin","borderRadius","boxShadow","transition","cursor","height","width","overflowWrap","wordBreak","whiteSpace","onClick","children","title","fileName","_jsxFileName","lineNumber","columnNumber","border","e","stopPropagation","id","_c","$RefreshReg$"],"sources":["/home/saharsh/Sticky_Notes_APP/sticky-notes-frontend/src/components/Note.js"],"sourcesContent":["import React from \"react\";\nimport { darken } from \"polished\";\nimport tinycolor from \"tinycolor2\";\n\n// Function to determine the appropriate background color for the delete button\nconst determineColor = (color) => {\n  const isDark = tinycolor(color).isDark(); // Check if the color is dark\n  if (isDark) {\n    return darken(-0.2, color); // Lighten the color slightly if it's dark\n  } else {\n    return darken(0.2, color); // Darken the color slightly if it's light\n  }\n};\n\n// Commented out for now; can be used later if font color needs to change dynamically\n// const determineFontColor = (color) => {\n//   const isDark = tinycolor(color).isDark();\n//   return isDark ? \"#fff\" : \"#000\"; // White font for dark backgrounds, black for light\n// };\n\nconst Note = ({ note, onDelete, onSelect }) => {\n  // Check if the note has large content (e.g., more than 200 characters)\n  const isLargeContent = note.content.length > 200;\n\n  return (\n    <div\n      className={`note ${isLargeContent ? \"large-content\" : \"\"}`} // Add class for large content\n      style={{\n        //   color: determineFontColor(note.color), // Uncomment if dynamic font color is needed\n        backgroundColor: note.color || \"#fff\", // Default color if none provided\n        padding: \"15px\",\n        margin: \"10px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.2)\", // Subtle shadow for better appearance\n        transition: \"transform 0.2s\", // Smooth scaling effect on hover\n        cursor: \"pointer\", // Pointer cursor to indicate clickability\n        height: \"auto\", // Allow dynamic height based on content\n        width: \"auto\", // Allow dynamic width based on content\n        overflowWrap: \"break-word\", // Ensure long words break properly\n        wordBreak: \"break-word\", // Additional support for older browsers\n        whiteSpace: \"normal\", // Allow text wrapping\n      }}\n      onClick={() => onSelect(note)} // Open the note in edit mode when clicked\n    >\n      <h3>{note.title}</h3>\n      <p>{note.content}</p>\n      {/* Button to delete the note */}\n      <button\n        className=\"delete-button\"\n        style={{\n          backgroundColor: note.color ? determineColor(note.color) : \"#fff\", // Adjust button color based on note color\n          border: \"none\", // Remove default button border\n          padding: \"5px 10px\", // Add padding for better appearance\n          borderRadius: \"4px\", // Rounded corners for the button\n          cursor: \"pointer\", // Pointer cursor for better UX\n        }}\n        onClick={(e) => {\n          e.stopPropagation(); // Prevent triggering the onClick of the parent div\n          onDelete(note.id); // Delete the note\n        }}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default Note;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,MAAMC,MAAM,GAAGL,SAAS,CAACI,KAAK,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC1C,IAAIA,MAAM,EAAE;IACV,OAAON,MAAM,CAAC,CAAC,GAAG,EAAEK,KAAK,CAAC,CAAC,CAAC;EAC9B,CAAC,MAAM;IACL,OAAOL,MAAM,CAAC,GAAG,EAAEK,KAAK,CAAC,CAAC,CAAC;EAC7B;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,MAAME,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAC7C;EACA,MAAMC,cAAc,GAAGH,IAAI,CAACI,OAAO,CAACC,MAAM,GAAG,GAAG;EAEhD,oBACEV,OAAA;IACEW,SAAS,EAAE,QAAQH,cAAc,GAAG,eAAe,GAAG,EAAE,EAAG,CAAC;IAAA;IAC5DI,KAAK,EAAE;MACL;MACAC,eAAe,EAAER,IAAI,CAACH,KAAK,IAAI,MAAM;MAAE;MACvCY,OAAO,EAAE,MAAM;MACfC,MAAM,EAAE,MAAM;MACdC,YAAY,EAAE,KAAK;MACnBC,SAAS,EAAE,8BAA8B;MAAE;MAC3CC,UAAU,EAAE,gBAAgB;MAAE;MAC9BC,MAAM,EAAE,SAAS;MAAE;MACnBC,MAAM,EAAE,MAAM;MAAE;MAChBC,KAAK,EAAE,MAAM;MAAE;MACfC,YAAY,EAAE,YAAY;MAAE;MAC5BC,SAAS,EAAE,YAAY;MAAE;MACzBC,UAAU,EAAE,QAAQ,CAAE;IACxB,CAAE;IACFC,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAACF,IAAI,CAAE,CAAC;IAAA;IAAAqB,QAAA,gBAE/B1B,OAAA;MAAA0B,QAAA,EAAKrB,IAAI,CAACsB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrB/B,OAAA;MAAA0B,QAAA,EAAIrB,IAAI,CAACI;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErB/B,OAAA;MACEW,SAAS,EAAC,eAAe;MACzBC,KAAK,EAAE;QACLC,eAAe,EAAER,IAAI,CAACH,KAAK,GAAGD,cAAc,CAACI,IAAI,CAACH,KAAK,CAAC,GAAG,MAAM;QAAE;QACnE8B,MAAM,EAAE,MAAM;QAAE;QAChBlB,OAAO,EAAE,UAAU;QAAE;QACrBE,YAAY,EAAE,KAAK;QAAE;QACrBG,MAAM,EAAE,SAAS,CAAE;MACrB,CAAE;MACFM,OAAO,EAAGQ,CAAC,IAAK;QACdA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;QACrB5B,QAAQ,CAACD,IAAI,CAAC8B,EAAE,CAAC,CAAC,CAAC;MACrB,CAAE;MAAAT,QAAA,EACH;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACK,EAAA,GA7CIhC,IAAI;AA+CV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}